# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CI - Service package and Docker image

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ${{ secrets.DOCKER_USERNAME }}


jobs:
  find-changes:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.changes.outputs.changes }}
    steps:
    - uses: actions/checkout@v4
      with:
          fetch-depth: 0
    - uses: dorny/paths-filter@v3
      name: Filter changes
      id: changes
      with:
        list-files: 'json'
        filters: |
          Auth-service:
            - 'Auth-service/**'
          Product-service:
            - 'Product-service/**'
          Order-service:
            - 'Order-service/**'
          Payment-service:
            - 'Payment-service/**'
          API-Gateway:
            - 'API-Gateway/**'
          Server:
            - 'Server/**'
          Cart-service:
            - 'Cart-service/**'
          Catalog-service:
            - 'Catalog-service/**'
          Search-service:
            - 'Search-service/**'

  # Package services and build Docker images only for changed services
  # Each changed service directory is built in a separate job using a matrix strategy
  package-and-build:
    runs-on: ubuntu-latest
    needs: find-changes
    strategy:
      matrix:
        service: ${{ fromJson(needs.find-changes.outputs.services) }}
      fail-fast: false
    steps:
    - uses: actions/checkout@v4
      with:
          fetch-depth: 0

    - name: Set up JDK 25
      uses: actions/setup-java@v4
      with:
        java-version: '25'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: |
        echo "Building in directory: ${{ matrix.service }}"
        cd ./${{ matrix.service }}
        if [ -f "pom.xml" ]; then
          mvn -B package --file pom.xml
        else
          echo "No pom.xml found in ${{ matrix.service }}, skipping Maven build."
        fi
        cd ..

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

    - name: Log into registry ${{ env.REGISTRY }}
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3.6.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
      with:
        images: ${{ env.REGISTRY }}/${{ matrix.service }}

    - name: Build and push Docker image
      id: build-and-push
      uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
      with:
        context: ./${{ matrix.service }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
