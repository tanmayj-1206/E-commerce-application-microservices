# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CI - Service package and Docker image

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ${{ secrets.DOCKER_USERNAME }}


jobs:
  package-and-build:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.changed_files.outputs.all_changed_files }}
    steps:
    - uses: actions/checkout@v4
      with:
          fetch-depth: 0

    - name: Set up JDK 25
      uses: actions/setup-java@v4
      with:
        java-version: '25'
        distribution: 'temurin'
        cache: maven

    - name: Get changed files
      id: changed_files
      uses: tj-actions/changed-files@v47.0.0
      with:
        files_ignore: .github/**
        dir_names: true
        dir_names_max_depth: 1

    - name: Build with Maven
      if: steps.changed_files.outputs.any_changed == 'true'
      run: |
        echo "Changed dirs: ${{ steps.changed_files.outputs.all_changed_files }}"
         for dir in ${{ steps.changed_files.outputs.all_changed_files }}; do
           echo "Building in directory: $dir"
           cd ./$dir
          if [ -f "pom.xml" ]; then
            mvn -B package --file pom.xml
          else
            echo "No pom.xml found in $dir, skipping Maven build."
          fi
          cd ..
         done

  build-and-push-docker-image:
    runs-on: ubuntu-latest
    if: needs.package-and-build.outputs.services != ''
    needs: package-and-build
    strategy:
      matrix:
        service: ${{ needs.package-and-build.outputs.services }} 
    
    steps:
      - uses: actions/checkout@v4
        with:
            fetch-depth: 0
        
      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.6.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: ${{ env.REGISTRY }}/${{ matrix.service }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@0565240e2d4ab88bba5387d719585280857ece09 # v5.0.0
        with:
          context: ./${{ matrix.service }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

