spring.application.name=payment-service
server.port=${SERVER_PORT}

spring.datasource.url=${SERVICE_DB_URL}
spring.datasource.username=${SERVICE_DB_USERNAME}
spring.datasource.password=${SERVICE_DB_PASSWORD}
spring.jpa.hibernate.ddl-auto=${SERVICE_HIBERNATE_DDL_AUTO:create-drop}
spring.jpa.show-sql=${SERVICE_SHOW_SQL:true}

spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS}

# Producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Consumer
spring.kafka.consumer.group-id=order-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

#Stripe config
stripe.url.success=${STRIPE_SUCCESS_URL}
stripe.url.cancel=${STRIPE_CANCEL_URL}
stripe.expire=${STRIPE_EXPIRY}
stripe.currency=${STRIPE_CURRENCY}
stripe.secret=${STRIPE_SECRET}
stripe.webhook.secret=${STRIPE_WEBHOOK_SECRET}

eureka.client.service-url.defaultzone=${EUREKA_URL}
eureka.instance.prefer-ip-address=true 